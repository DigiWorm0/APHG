{"version":3,"sources":["Game/GameState.ts","Layout/Footer/Footer.tsx","Game/Event/EventTemplate/EffectType.ts","Game/Player/PlayerList/PlayerList.tsx","Game/Event/Event.tsx","Game/Event/EventTemplate/EventTemplate.ts","Game/Event/EventTemplate/EventTemplateDB.ts","Game/Player/Player.tsx","Layout/TitleBar/TitleBar.tsx","Game/AddPlayerPopup/AddPlayerPopup.tsx","Game/States/MainMenu.tsx","Game/Event/EventList/EventList.tsx","Game/States/EventView.tsx","Game/States/DeathView.tsx","Game/States/WinnerView.tsx","Game/Game.tsx","Layout/Header/Header.tsx","index.tsx"],"names":["GameState","Footer","className","React","Component","EffectType","PlayerList","this","props","players","length","map","player","render","noPlayerMessage","Event","template","text","forEach","index","replace","includes","name","effects","effect","Injure","isInjured","Kill","isAlive","Game","aliveCount","deathList","push","teammate","teammates","indexOf","splice","Heal","GainWeapon","hasWeapon","GainMedicine","hasMedicine","JoinTeam","id","DisbandTeam","dangerouslySetInnerHTML","__html","EventTemplate","playerCount","playerList","getRandomPlayer","event","chooseRandomTemplate","db","Math","floor","random","START_EVENTS","None","NEUTRAL_EVENTS","TEAM_EVENTS2","HOSTILE_EVENTS","Player","image","_randomId","state","Start","Day","Night","generateEvent","applyEffects","MainMenu","src","onClick","deletePlayer","alt","width","height","toString","substring","TitleBar","title","AddPlayerPopup","lastImageUpload","imgFiles","document","getElementById","files","file","reader","FileReader","onload","e","target","result","readAsDataURL","popupName","addPlayer","value","close","popup","style","opacity","setTimeout","marginLeft","action","onSubmit","add","htmlFor","type","maxLength","onInput","uploadImg","open","nextState","EventList","events","EventView","desc","currentEvents","DeathView","WinnerView","getAliveList","window","onbeforeunload","savePlayers","forceUpdate","setState","bind","loadPlayers","Deaths","Winner","console","log","data","n","i","stringData","JSON","stringify","localStorage","setItem","getItem","parse","filter","reset","resetPlayers","generateEvents","Header","href","ReactDOM","StrictMode"],"mappings":"gOAAKA,E,mFCgBUC,E,4JAXX,WAEI,OACI,yBAAQC,UAAU,wCAAlB,yRAEI,uBAFJ,sC,GALSC,IAAMC,W,iBDHtBJ,O,uBAAAA,I,iBAAAA,I,aAAAA,I,mBAAAA,I,iBAAAA,I,aAAAA,I,oBAAAA,M,KAWUA,IEXVK,EFWUL,I,iBEXVK,O,eAAAA,I,eAAAA,I,mBAAAA,I,+BAAAA,I,2BAAAA,I,eAAAA,I,uBAAAA,I,8BAAAA,M,KAYUA,QCaAC,E,4JAbX,WAEI,OAAIC,KAAKC,MAAMC,QAAQC,OAAS,EACpBH,KAAKC,MAAMC,QAAQE,KAAI,SAAAC,GACnB,OAAOA,EAAOC,YAGlB,qBAAKX,UAAU,MAAf,SACJ,4BAAIK,KAAKC,MAAMM,wB,GAVNX,IAAMC,WC0EhBW,E,kDAjEX,WAAYP,GACX,IAAD,8BACI,cAAMA,IANVQ,cAKA,IAJAP,aAIA,IAHAQ,UAGA,EAEI,EAAKD,SAAWR,EAAMQ,SACtB,EAAKP,QAAUD,EAAMC,QACrB,EAAKQ,KAAO,EAAKD,SAASC,KAC1B,EAAKR,QAAQS,SAAQ,SAACN,EAAQO,GAE1B,IADA,IAAIC,EAAU,KAAOD,EAAQ,IACtB,EAAKF,KAAKI,SAASD,IACtB,EAAKH,KAAO,EAAKA,KAAKG,QAAQA,EAAS,0BAA8BR,EAAOU,KAAO,cAR/F,E,gDAaA,WACC,IAAD,OACIf,KAAKS,SAASO,QAAQL,SAAQ,SAACM,EAAQL,GACnC,IAAIP,EAAS,EAAKH,QAAQU,GAC1B,OAAOK,GAEH,KAAKnB,EAAWoB,OACZb,EAAOc,WAAY,EACnB,MACJ,KAAKrB,EAAWsB,KACZf,EAAOgB,SAAU,EACjBC,EAAKC,aACLD,EAAKE,UAAUC,KAAKpB,GACpBiB,EAAKpB,QAAQS,SAAQ,SAACe,GAClB,IAAId,EAAQc,EAASC,UAAUC,QAAQvB,GACnCO,GAAS,GACTc,EAASC,UAAUE,OAAOjB,EAAO,MAEzC,MACJ,KAAKd,EAAWgC,KACZzB,EAAOc,WAAY,EACnB,MACJ,KAAKrB,EAAWiC,WACZ1B,EAAO2B,WAAY,EACnB,MACJ,KAAKlC,EAAWmC,aACZ5B,EAAO6B,aAAc,EACrB,MACJ,KAAKpC,EAAWqC,SACZ,EAAKjC,QAAQS,SAAQ,SAACe,GACdA,EAASU,KAAO/B,EAAO+B,IACvB/B,EAAOsB,UAAUF,KAAKC,MAE9B,MACJ,KAAK5B,EAAWuC,YACZhC,EAAOsB,UAAY,S,oBAMnC,WAEI,OACI,sBAAKhC,UAAU,QAAf,UACI,cAAC,EAAD,CAAYO,QAASF,KAAKE,QAASK,gBAAgB,+BACnD,mBAAG+B,wBAAyB,CAACC,OAAQvC,KAAKU,e,GAlEtCd,IAAMC,WCuBX2C,E,WAzBX,WAAY9B,EAAcM,EAAuByB,GAChD,yBALD/B,UAKA,OAJAM,aAIA,OAHAyB,iBAGA,EACIzC,KAAKU,KAAOA,EACZV,KAAKgB,QAAUA,EACfhB,KAAKyC,YAAcA,E,iDAGvB,WACC,IAAD,uBADiBvC,EACjB,yBADiBA,EACjB,gBAEI,IADA,IAAIwC,EAAaxC,EACVwC,EAAWvC,OAASH,KAAKyC,aAChC,CACI,IAAIpC,EAASiB,EAAKqB,kBACbD,EAAW5B,SAAST,IACrBqC,EAAWjB,KAAKpB,GAGxB,IAAIuC,EAAQ,IAAIpC,EAAM,CAClBC,SAAUT,KACVE,YAGJ,OAAO0C,M,KC9BR,SAASC,EAAqBC,GAEjC,OAAOA,EAAGC,KAAKC,MAAMD,KAAKE,SAAWH,EAAG3C,SAGrC,IAAI+C,EAAgC,CACvC,IAAIV,EAAc,qCAAsC,GAAI,GAC5D,IAAIA,EAAc,qCAAsC,GAAI,GAC5D,IAAIA,EAAc,qCAAsC,GAAI,GAC5D,IAAIA,EAAc,qCAAsC,GAAI,GAC5D,IAAIA,EAAc,uCAAwC,CAAC1C,EAAWmC,cAAe,GACrF,IAAIO,EAAc,8BAA+B,CAAC1C,EAAWiC,YAAa,GAC1E,IAAIS,EAAc,+BAAgC,CAAC1C,EAAWiC,YAAa,GAC3E,IAAIS,EAAc,+BAAgC,CAAC1C,EAAWiC,YAAa,GAC3E,IAAIS,EAAc,kCAAmC,CAAC1C,EAAWiC,YAAa,GAC9E,IAAIS,EAAc,0CAA2C,CAAC1C,EAAWmC,cAAe,GACxF,IAAIO,EAAc,8CAA+C,CAAC1C,EAAWmC,cAAe,GAC5F,IAAIO,EAAc,oCAAqC,CAAC1C,EAAWmC,cAAe,GAClF,IAAIO,EAAc,mDAAoD,GAAI,GAC1E,IAAIA,EAAc,2CAA4C,CAAC1C,EAAWiC,YAAa,GACvF,IAAIS,EAAc,4DAA6D,CAAC1C,EAAWqD,KAAMrD,EAAWiC,YAAa,GACzH,IAAIS,EAAc,4DAA6D,CAAC1C,EAAWqD,KAAMrD,EAAWmC,cAAe,GAC3H,IAAIO,EAAc,4DAA6D,CAAC1C,EAAWiC,YAAa,GACxG,IAAIS,EAAc,4DAA6D,CAAC1C,EAAWmC,cAAe,GAC1G,IAAIO,EAAc,+GAAgH,CAAC1C,EAAWsB,KAAMtB,EAAWoB,QAAS,GACxK,IAAIsB,EAAc,sCAAuC,GAAI,GAC7D,IAAIA,EAAc,8CAA+C,CAAC1C,EAAWiC,YAAa,GAC1F,IAAIS,EAAc,+FAAgG,GAAI,GACtH,IAAIA,EAAc,+CAAgD,GAAI,GACtE,IAAIA,EAAc,mCAAoC,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,IAGnFgC,EAAkC,CACzC,IAAIZ,EAAc,sCAAuC,GAAI,GAC7D,IAAIA,EAAc,6CAA8C,CAAC1C,EAAWsB,MAAO,GACnF,IAAIoB,EAAc,qCAAsC,GAAI,GAC5D,IAAIA,EAAc,yCAA0C,CAAC1C,EAAWiC,YAAa,GACrF,IAAIS,EAAc,4CAA6C,CAAC1C,EAAWiC,YAAa,GACxF,IAAIS,EAAc,4CAA6C,CAAC1C,EAAWiC,YAAa,GACxF,IAAIS,EAAc,6DAA8D,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,GACpH,IAAIoB,EAAc,6DAA8D,CAAC1C,EAAWsB,MAAO,GACnG,IAAIoB,EAAc,yDAA0D,CAAC1C,EAAWqD,KAAMrD,EAAWoB,QAAS,GAClH,IAAIsB,EAAc,kDAAmD,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,GACzG,IAAIoB,EAAc,0GAA2G,CAAC1C,EAAWqC,SAAUrC,EAAWqC,UAAW,GACzK,IAAIK,EAAc,uEAAwE,CAAC1C,EAAWqC,SAAUrC,EAAWqC,UAAW,GACtI,IAAIK,EAAc,6CAA8C,CAAC1C,EAAWqC,SAAUrC,EAAWqC,UAAW,GAC5G,IAAIK,EAAc,8CAA+C,CAAC1C,EAAWqC,SAAUrC,EAAWqC,UAAW,GAC7G,IAAIK,EAAc,iDAAkD,CAAC1C,EAAWqC,SAAUrC,EAAWqC,UAAW,GAChH,IAAIK,EAAc,8CAA+C,CAAC1C,EAAWqC,SAAUrC,EAAWqC,UAAW,GAC7G,IAAIK,EAAc,8CAA+C,CAAC1C,EAAWqC,SAAUrC,EAAWqC,UAAW,IAGtGkB,EAAgC,CACvC,IAAIb,EAAc,6CAA8C,GAAI,GACpE,IAAIA,EAAc,iEAAkE,GAAI,GACxF,IAAIA,EAAc,wEAAyE,CAAC1C,EAAWsB,KAAMtB,EAAWsB,MAAO,GAC/H,IAAIoB,EAAc,2DAA4D,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,GAClH,IAAIoB,EAAc,8CAA+C,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,GACrG,IAAIoB,EAAc,uCAAwC,CAAC1C,EAAWqD,KAAMrD,EAAWqD,KAAMrD,EAAWsB,MAAO,GAC/G,IAAIoB,EAAc,oDAAqD,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,GAC3G,IAAIoB,EAAc,oDAAqD,CAAC1C,EAAWsB,MAAO,GAC1F,IAAIoB,EAAc,8CAA+C,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,GACrG,IAAIoB,EAAc,8CAA+C,CAAC1C,EAAWsB,MAAO,GACpF,IAAIoB,EAAc,iDAAkD,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,GACxG,IAAIoB,EAAc,iDAAkD,CAAC1C,EAAWsB,MAAO,GACvF,IAAIoB,EAAc,2EAA4E,GAAI,GAClG,IAAIA,EAAc,yEAA0E,CAAC1C,EAAWoB,OAAQpB,EAAWoB,QAAS,GACpI,IAAIsB,EAAc,wDAAyD,CAAC1C,EAAWqD,KAAMrD,EAAWoB,QAAS,GACjH,IAAIsB,EAAc,+FAAgG,CAAC1C,EAAWuC,YAAavC,EAAWuC,aAAc,GACpK,IAAIG,EAAc,0DAA2D,CAAC1C,EAAWiC,WAAYjC,EAAWiC,YAAa,GAC7H,IAAIS,EAAc,+DAAgE,CAAC1C,EAAWmC,aAAcnC,EAAWmC,cAAe,GACtI,IAAIO,EAAc,sEAAuE,CAAC1C,EAAWmC,aAAcnC,EAAWmC,cAAe,GAC7I,IAAIO,EAAc,uFAAwF,CAAC1C,EAAWmC,aAAcnC,EAAWmC,cAAe,IAGvJqB,EAAkC,CACzC,IAAId,EAAc,wDAAyD,GAAI,GAC/E,IAAIA,EAAc,8BAA+B,CAAC1C,EAAWqD,KAAMrD,EAAWsB,MAAO,GACrF,IAAIoB,EAAc,4CAA6C,CAAC1C,EAAWqD,KAAMrD,EAAWsB,KAAMtB,EAAWsB,MAAO,GACpH,IAAIoB,EAAc,4DAA6D,CAAC1C,EAAWqD,KAAMrD,EAAWsB,KAAMtB,EAAWsB,KAAMtB,EAAWsB,MAAO,ICa1ImC,G,wDApEX,WAAYtD,GACX,IAAD,8BACI,cAAMA,IAbVmC,QAYA,IAXArB,UAWA,IAVAyC,WAUA,IARAnC,aAQA,IAPAF,eAOA,IANAa,eAMA,IALAE,iBAKA,IAHAP,eAGA,EAEI,EAAKZ,KAAOd,EAAMc,KAClB,EAAKyC,MAAQvD,EAAMuD,MAEnB,EAAKpB,GAAK,EAAKrB,KAAO,EAAK0C,YAAc,EAAKA,YAE9C,EAAKpC,SAAU,EACf,EAAKF,WAAY,EACjB,EAAKa,WAAY,EACjB,EAAKE,aAAc,EACnB,EAAKP,UAAY,GAXrB,E,iDAcA,WACC,IAAD,EACI,KAAIL,EAAKC,YAAc,GAAvB,CAGA,IAAId,EACJ,GAAIa,EAAKoC,QAAUjE,EAAUkE,MACzBlD,EAAWoC,EAAqBK,OAC/B,IAAI5B,EAAKoC,QAAUjE,EAAUmE,KAAOtC,EAAKoC,QAAUjE,EAAUoE,MAU9D,OAPIpD,EAD0B,IAA1BT,KAAK2B,UAAUxB,OACJ0C,EAAqBQ,GAC3BrD,KAAKgC,UACCa,EAAqBS,GAErBT,EAAqBO,GAKxC,GAAI3C,EAASgC,YAAcnB,EAAKC,WAC5B,OAAOvB,KAAK8D,gBAEhB,IAAIlB,GAAQ,EAAAnC,GAASqD,cAAT,SAAuB9D,MAAvB,mBAAgCA,KAAK2B,aAEjD,OADAiB,EAAMmB,eACCnB,K,mBAGX,WAEI5C,KAAKqB,SAAU,EACfrB,KAAKmB,WAAY,EACjBnB,KAAKgC,WAAY,EACjBhC,KAAKkC,aAAc,EACnBlC,KAAK2B,UAAY,K,oBAGrB,WACC,IAAD,OACI,OACI,sBAAKhC,UAAW,UAAYK,KAAKqB,QAAU,GAAK,gBAAhD,UACKC,EAAKoC,QAAUjE,EAAUuE,UAAY,qBAAKrE,UAAU,eAAesE,IAAI,kBAAkBC,QAAS,kBAAM5C,EAAK6C,aAAa,IAAOC,IAAI,UACtI,qBAAKH,IAAKjE,KAAKwD,MAAOa,MAAM,MAAMC,OAAO,MAAMF,IAAI,WACnD,6BAAKpE,KAAKe,Y,uBAKtB,WAEI,OAAOgC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAAqBsB,SAAS,IAAIC,UAAU,O,GA9E3D5E,IAAMC,YCoBZ4E,G,wDAtBX,WAAYxE,GACX,IAAD,8BACI,cAAMA,IAJVyE,WAGA,EAEI,EAAKA,MAAQzE,EAAMyE,MAFvB,E,4CAKA,SAASA,GAEL1E,KAAK0E,MAAQA,I,oBAGjB,WAEI,OACI,qBAAK/E,UAAU,sCAAf,SACI,qBAAKA,UAAU,oCAAf,SACI,6BAAKK,KAAK0E,gB,GApBP9E,IAAMC,YCmFd8E,G,wDAlFX,WAAY1E,GACX,IAAD,8BACI,cAAMA,IAJV2E,qBAGA,EAEI,EAAKA,gBAAkB,wBAF3B,E,6CAYA,WACC,IAAD,OAEQC,EADWC,SAASC,eAAe,mBACfC,MACxB,KAAIH,EAAS1E,OAAS,GAAtB,CAGA,IAAI8E,EAAOJ,EAAS,GAChBK,EAAS,IAAIC,WACjBD,EAAOE,OAAU,SAACC,GACd,EAAKT,gBAAmBS,EAAEC,OAAsBC,OAElCT,SAASC,eAAe,uBAC9Bd,IAAM,EAAKW,iBAEvBM,EAAOM,cAAcP,M,iBAGzB,WAEI,IAAIQ,EAAYX,SAASC,eAAe,oBAExCzD,EAAKoE,UAAUD,EAAUE,MAAO3F,KAAK4E,iBAErC5E,KAAK4F,U,mBAGT,WAEI,IAAIC,EAAQf,SAASC,eAAe,eACpCc,EAAMC,MAAMC,QAAU,IACtBC,YAAW,kBAAMH,EAAMC,MAAMG,WAAa,UAAS,O,oBAIvD,WACC,IAAD,OACI,OACI,sBAAKtG,UAAU,cAAcyC,GAAG,cAAhC,UACI,qBAAKzC,UAAU,2BAEf,sBAAKA,UAAU,qCAAf,UACI,cAAC,EAAD,CAAU+E,MAAM,mBAChB,sBAAK/E,UAAU,MAAf,UACI,sBAAKA,UAAU,eAAf,UACI,uBAAMuG,OAAO,IAAIC,SAAU,kBAAM,EAAKC,OAAtC,UACI,uBAAOzG,UAAU,kBAAkB0G,QAAQ,mBAA3C,kBACA,uBAAO1G,UAAU,eAAe2G,KAAK,OAAOlE,GAAG,mBAAmBmE,UAAW,KAE7E,uBAAO5G,UAAU,uBAAuB0G,QAAQ,kBAAhD,mBACA,uBAAO1G,UAAU,eAAe2G,KAAK,OAAOlE,GAAG,kBAAkBoE,QAAS,kBAAM,EAAKC,kBAGzF,wBAAQ9G,UAAU,2BAA2BuE,QAAS,kBAAM,EAAKkC,OAAjE,0BAGA,wBAAQzG,UAAU,2BAA2BuE,QAAS,kBAAM,EAAK0B,SAAjE,sBAIJ,qBAAKjG,UAAU,WAAf,SACI,qBAAKA,UAAU,0BAA0ByC,GAAG,sBAAsB6B,IAAI,wC,mBApE9F,WAEI,IAAI4B,EAAQf,SAASC,eAAe,eACpCc,EAAMC,MAAMC,QAAU,IACtBF,EAAMC,MAAMG,WAAa,Q,GAdJrG,IAAMC,YCkCpBmE,E,kDA/BX,WAAY/D,GACX,uCACSA,G,0CAGV,WAEI,OACI,sBAAKN,UAAU,WAAf,UACI,cAAC,EAAD,CAAU+E,MAAM,gBAEhB,qBAAK/E,UAAU,oBAAf,SACI,cAAC,EAAD,CAAYO,QAASoB,EAAKpB,QAASK,gBAAgB,+BAGvD,qBAAKZ,UAAU,6BAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,wBAAQA,UAAU,sBAAsBuE,QAAS,kBAAMS,EAAe+B,QAAtE,0BAGA,wBAAQ/G,UAAU,sBAAsBuE,QAAS,kBAAM5C,EAAKqF,aAA5D,6BAMR,cAAC,EAAD,W,GA5BO/G,IAAMC,WCad+G,E,4JATX,WAEI,OACI5G,KAAKC,MAAM4G,OAAOzG,KAAI,SAAAwC,GAClB,OAAOA,EAAMtC,gB,GANLV,IAAMC,WC2BfiH,E,4JAtBX,WAEI,OACI,sBAAKnH,UAAU,YAAf,UACI,cAAC,EAAD,CAAU+E,MAAO1E,KAAKC,MAAMyE,QAE5B,sBAAK/E,UAAU,oBAAf,UACI,mBAAGA,UAAU,MAAb,SAAoBK,KAAKC,MAAM8G,OAC/B,cAAC,EAAD,CAAWF,OAAQvF,EAAK0F,mBAG5B,qBAAKrH,UAAU,6BAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,wBAAQA,UAAU,sBAAsBuE,QAAS,kBAAM5C,EAAKqF,aAA5D,gC,GAfA/G,IAAMC,WCmBfoH,E,4JAtBX,WAEI,OACI,sBAAKtH,UAAU,YAAf,UACI,cAAC,EAAD,CAAU+E,MAAM,WAEhB,sBAAK/E,UAAU,oBAAf,UACI,oBAAGA,UAAU,MAAb,UAAoB2B,EAAKE,UAAUrB,OAAnC,gDACA,cAAC,EAAD,CAAYD,QAASoB,EAAKE,UAAWjB,gBAAgB,QAGzD,qBAAKZ,UAAU,6BAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,wBAAQA,UAAU,sBAAsBuE,QAAS,kBAAM5C,EAAKqF,aAA5D,gC,GAfA/G,IAAMC,WCwBfqH,E,4JAtBX,WAEI,OACI,sBAAKvH,UAAU,aAAf,UACI,cAAC,EAAD,CAAU+E,MAAM,WAEhB,sBAAK/E,UAAU,oBAAf,UACI,mBAAGA,UAAU,MAAb,6BACA,cAAC,EAAD,CAAYO,QAASoB,EAAK6F,eAAgB5G,gBAAgB,wBAG9D,qBAAKZ,UAAU,6BAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,wBAAQA,UAAU,sBAAsBuE,QAAS,kBAAM5C,EAAKqF,aAA5D,gC,GAfC/G,IAAMC,WCIzByB,E,kDASF,WAAYrB,GACX,IAAD,6BACI,cAAMA,GACNqB,EAAKoC,MAAQjE,EAAUuE,SACvB1C,EAAKpB,QAAU,GACfoB,EAAKE,UAAY,GACjBF,EAAKC,WAAa,EAClBD,EAAK0F,cAAgB,GACrBI,OAAOC,eAAiB/F,EAAKgG,YAC7BhG,EAAKiG,YAAe,WAChB,EAAKC,SAAS,KACfC,KAFiB,gBAIpBnG,EAAKoG,cAZT,E,0CAuIA,WAEI,OAAIpG,EAAKoC,QAAUjE,EAAUuE,SAEhB,cAAC,EAAD,IAEJ1C,EAAKoC,QAAUjE,EAAUkE,MAErB,cAAC,EAAD,CAAWe,MAAM,gBAAgBqC,KAAK,6DAE1CzF,EAAKoC,QAAUjE,EAAUmE,IAErB,cAAC,EAAD,CAAWc,MAAM,MAAMqC,KAAK,MAEhCzF,EAAKoC,QAAUjE,EAAUoE,MAErB,cAAC,EAAD,CAAWa,MAAM,QAAQqC,KAAK,MAElCzF,EAAKoC,QAAUjE,EAAUkI,OAErB,cAAC,EAAD,IAEJrG,EAAKoC,QAAUjE,EAAUmI,OAErB,cAAC,EAAD,IAIA,6D,0BApJjB,WAEIC,QAAQC,IAAI,yBAEZ,IAAIC,EAAqB,GACzBzG,EAAKpB,QAAQS,SAAQ,SAACN,GAClB0H,EAAKtG,KAAK,CACNuG,EAAG3H,EAAOU,KACVkH,EAAG5H,EAAOmD,WAIlB,IAAI0E,EAAaC,KAAKC,UAAUL,GAChCM,aAAaC,QAAQ,aAAcJ,K,yBAGvC,WAEI,IAAIA,EAAaG,aAAaE,QAAQ,cAChCL,GAGKC,KAAKK,MAAMN,GACjBvH,SAAQ,SAACN,GACViB,EAAKpB,QAAQuB,KAAK,IAAI8B,EAAO,CACzBxC,KAAMV,EAAO2H,EACbxE,MAAOnD,EAAO4H,U,0BAK1B,WAEI,OAAO3G,EAAKpB,QAAQuI,QAAO,SAAApI,GAAM,OAAIA,EAAOgB,a,6BAGhD,WAEI,IAAIhB,EAASiB,EAAKpB,QAAQ6C,KAAKC,MAAMD,KAAKE,SAAW3B,EAAKpB,QAAQC,SAClE,OAAIE,EAAOgB,QACAhB,EAEAL,KAAK2C,oB,4BAGpB,WAEI,IAAIkE,EAAkB,GACtBvF,EAAKpB,QAAQS,SAAQ,SAAAN,GACjB,IAAIuC,EAAQvC,EAAOyD,gBACflB,GACAiE,EAAOpF,KAAKmB,MAEpBtB,EAAK0F,cAAgBH,I,uBAGzB,SAAiB9F,EAAcyC,GAE3BlC,EAAKpB,QAAQuB,KAAK,IAAI8B,EAAO,CAAExC,OAAMyC,WACrClC,EAAKiG,gB,0BAGT,SAAoBlH,GAEhB,IAAIO,EAAQU,EAAKpB,QAAQ0B,QAAQvB,GACjCiB,EAAKpB,QAAQ2B,OAAOjB,EAAO,GAC3BU,EAAKiG,gB,0BAGT,WAEIjG,EAAKC,WAAavB,KAAKE,QAAQC,OAC/BmB,EAAKpB,QAAQS,SAAQ,SAAAN,GACjBA,EAAOqI,a,uBAIf,WAEIb,QAAQC,IAAIxG,EAAKoC,OACbpC,EAAKoC,QAAUjE,EAAUuE,UAEzB1C,EAAKqH,eACLrH,EAAKoC,MAAQjE,EAAUkE,MACvBrC,EAAKsH,kBAEAtH,EAAKC,YAAc,GAAKD,EAAKoC,OAASjE,EAAUmI,OAErDtG,EAAKoC,MAAQjE,EAAUmI,OAElBtG,EAAKoC,QAAUjE,EAAUkI,QAE9BrG,EAAKE,UAAY,GACjBF,EAAKoC,MAAQjE,EAAUmE,IACvBtC,EAAKsH,kBAEAtH,EAAKoC,QAAUjE,EAAUkE,OAE9BrC,EAAKoC,MAAQjE,EAAUmE,IACvBtC,EAAKsH,kBAEAtH,EAAKoC,QAAUjE,EAAUmE,KAE9BtC,EAAKoC,MAAQjE,EAAUoE,MACvBvC,EAAKsH,kBAEAtH,EAAKoC,QAAUjE,EAAUoE,MAE9BvC,EAAKoC,MAAQjE,EAAUkI,OAElBrG,EAAKoC,QAAUjE,EAAUmI,SAE9BtG,EAAKoC,MAAQjE,EAAUuE,SACvB1C,EAAKqH,gBAGTd,QAAQC,IAAIxG,EAAKoC,OACjBpC,EAAKiG,kB,GA9IM3H,IAAMC,WAAnByB,EAEKoC,W,EAFLpC,EAGKpB,a,EAHLoB,EAIKE,e,EAJLF,EAKK0F,mB,EALL1F,EAMKC,gB,EANLD,EAOKiG,iB,EA0KIjG,QCzKAuH,G,kKAbX,WAEI,OACI,qBAAKlJ,UAAU,kCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,mBAAGA,UAAU,mBAAmBmJ,KAAK,IAArC,SACI,qBAAK7E,IAAI,mBAAmBK,OAAO,KAAKF,IAAI,2C,GAR/CxE,IAAMC,YCI3BkJ,IAASzI,OACL,eAAC,IAAM0I,WAAP,WACA,cAAC,EAAD,IACI,qBAAKrJ,UAAU,8BAAf,SACI,cAAC,EAAD,MAER,cAAC,EAAD,OAEAmF,SAASC,eAAe,W","file":"static/js/main.1b1372f4.chunk.js","sourcesContent":["enum GameState\r\n{\r\n    MainMenu,\r\n    Start,\r\n    Day,\r\n    Deaths,\r\n    Night,\r\n    End,\r\n    Winner\r\n}\r\n\r\nexport default GameState;","import React, { ReactNode } from 'react';\nimport './Footer.css';\n\nclass Footer extends React.Component\n{\n    render(): ReactNode\n    {\n        return (\n            <footer className=\"footer text-light pt-3 pb-3 ps-5 pe-5\">\n                The Unofficial AP Hunger Games is in no way associated with College Board or Advanced Placement. College Board, Advanced Placement, and other College Board trademarks are trademarks or registered trademarks of College Board or its affiliates in the U.S. and elsewhere.\n                <br/>\n                Made with &#10084; by DigiWorm\n            </footer>\n        );\n    }\n}\nexport default Footer;\n","enum EffectType\r\n{\r\n    None,\r\n    Kill,\r\n    Injure,\r\n    GainMedicine,\r\n    GainWeapon,\r\n    Heal,\r\n    JoinTeam,\r\n    DisbandTeam\r\n}\r\n\r\nexport default EffectType;","import React from 'react';\r\nimport Game from '../../Game';\r\nimport Player from '../Player';\r\n\r\ninterface PlayerListProps\r\n{\r\n    players: Player[];\r\n    noPlayerMessage: string;\r\n}\r\n\r\nclass PlayerList extends React.Component<PlayerListProps>\r\n{\r\n    render()\r\n    {\r\n        if (this.props.players.length > 0)\r\n            return (this.props.players.map(player => {\r\n                        return player.render();\r\n                    }));\r\n        else\r\n            return (<div className=\"p-4\">\r\n                <i>{this.props.noPlayerMessage}</i>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default PlayerList;\r\n","import React from 'react';\r\nimport Game from '../Game';\r\nimport Player from '../Player/Player';\r\nimport PlayerList from '../Player/PlayerList/PlayerList';\r\nimport EffectType from './EventTemplate/EffectType';\r\nimport EventTemplate from './EventTemplate/EventTemplate';\r\n\r\ninterface EventProps\r\n{\r\n    template: EventTemplate;\r\n    players: Player[];\r\n}\r\n\r\nclass Event extends React.Component<EventProps>\r\n{\r\n    template: EventTemplate;\r\n    players: Player[];\r\n    text: string;\r\n\r\n    constructor(props: EventProps)\r\n    {\r\n        super(props);\r\n        this.template = props.template;\r\n        this.players = props.players;\r\n        this.text = this.template.text;\r\n        this.players.forEach((player, index) => {\r\n            let replace = \"{p\" + index + \"}\";\r\n            while (this.text.includes(replace))\r\n                this.text = this.text.replace(replace, \"<span class=\\\"txt-blue\\\">\" + player.name + \"</span>\");\r\n        })\r\n        \r\n    }\r\n\r\n    applyEffects()\r\n    {\r\n        this.template.effects.forEach((effect, index) => {\r\n            let player = this.players[index];\r\n            switch(effect)\r\n            {\r\n                case EffectType.Injure:\r\n                    player.isInjured = true;\r\n                    break;\r\n                case EffectType.Kill:\r\n                    player.isAlive = false;\r\n                    Game.aliveCount--;\r\n                    Game.deathList.push(player);\r\n                    Game.players.forEach((teammate) => {\r\n                        let index = teammate.teammates.indexOf(player);\r\n                        if (index >= 0)\r\n                            teammate.teammates.splice(index, 1);\r\n                    });\r\n                    break;\r\n                case EffectType.Heal:\r\n                    player.isInjured = false;\r\n                    break;\r\n                case EffectType.GainWeapon:\r\n                    player.hasWeapon = true;\r\n                    break;\r\n                case EffectType.GainMedicine:\r\n                    player.hasMedicine = true;\r\n                    break;\r\n                case EffectType.JoinTeam:\r\n                    this.players.forEach((teammate) => {\r\n                        if (teammate.id !== player.id)\r\n                            player.teammates.push(teammate);\r\n                    });\r\n                    break;\r\n                case EffectType.DisbandTeam:\r\n                    player.teammates = [];\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"event\">\r\n                <PlayerList players={this.players} noPlayerMessage=\"Error: No players in event\" />\r\n                <p dangerouslySetInnerHTML={{__html: this.text}}></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event;\r\n","import Game from \"../../Game\";\r\nimport Player from \"../../Player/Player\";\r\nimport Event from \"../Event\";\r\nimport EffectType from \"./EffectType\";\r\n\r\nclass EventTemplate\r\n{\r\n    text: string;\r\n    effects: EffectType[];\r\n    playerCount: number;\r\n\r\n    constructor(text: string, effects: EffectType[], playerCount: number)\r\n    {\r\n        this.text = text;\r\n        this.effects = effects;\r\n        this.playerCount = playerCount;\r\n    }\r\n\r\n    generateEvent(...players: Player[]): Event\r\n    {\r\n        let playerList = players;\r\n        while (playerList.length < this.playerCount)\r\n        {\r\n            let player = Game.getRandomPlayer();\r\n            if (!playerList.includes(player))\r\n                playerList.push(player);\r\n        }\r\n\r\n        let event = new Event({\r\n            template: this,\r\n            players\r\n        });\r\n\r\n        return event;\r\n    }\r\n}\r\nexport default EventTemplate;\r\n","import EffectType from \"./EffectType\";\r\nimport EventTemplate from \"./EventTemplate\";\r\n\r\nexport function chooseRandomTemplate(db: EventTemplate[]): EventTemplate\r\n{\r\n    return db[Math.floor(Math.random() * db.length)];\r\n}\r\n\r\nexport let START_EVENTS: EventTemplate[] = [\r\n    new EventTemplate(\"{p0} runs away from the cornucopia\", [], 1),\r\n    new EventTemplate(\"{p0} runs away from the cornucopia\", [], 1),\r\n    new EventTemplate(\"{p0} runs away from the cornucopia\", [], 1),\r\n    new EventTemplate(\"{p0} runs away from the cornucopia\", [], 1),\r\n    new EventTemplate(\"{p0} grabs a first aid kit, and runs\", [EffectType.GainMedicine], 1),\r\n    new EventTemplate(\"{p0} grabs a mace, and runs\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} grabs a sword, and runs\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} grabs a shank, and runs\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} grabs a chainsaw, and runs\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} grabs a jar of mayonaise, and runs\", [EffectType.GainMedicine], 1),\r\n    new EventTemplate(\"{p0} grabs a McDonalds happy meal, and runs\", [EffectType.GainMedicine], 1),\r\n    new EventTemplate(\"{p0} grabs a pickle jar, and runs\", [EffectType.GainMedicine], 1),\r\n    new EventTemplate(\"{p0} grabs a pickle jar, but they can't open it!\", [], 1),\r\n    new EventTemplate(\"{p0} grabs a minecraft pickaxe, and runs\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} and {p1} fight for a bag. {p0} gives up and retreats\", [EffectType.None, EffectType.GainWeapon], 2),\r\n    new EventTemplate(\"{p0} and {p1} fight for a bag. {p0} gives up and retreats\", [EffectType.None, EffectType.GainMedicine], 2),\r\n    new EventTemplate(\"{p0} and {p1} fight for a bag. {p1} gives up and retreats\", [EffectType.GainWeapon], 2),\r\n    new EventTemplate(\"{p0} and {p1} fight for a bag. {p1} gives up and retreats\", [EffectType.GainMedicine], 2),\r\n    new EventTemplate(\"{p0} back flips off the pedestal, instantly snapping their neck.\\n{p1} laughs so hard they injure themselves\", [EffectType.Kill, EffectType.Injure], 2),\r\n    new EventTemplate(\"{p0} slaps {p1}'s ass then runs off\", [], 2),\r\n    new EventTemplate(\"{p0} finds a bow, some arrows, and a quiver\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} finds a bow, some arrows, and a quiver.\\nUnfortunately, they have no clue how to use it\", [], 1),\r\n    new EventTemplate(\"{p0} chases {p1}, but they are just too fast\", [], 2),\r\n    new EventTemplate(\"{p0} chases {p1}, and kills them\", [EffectType.None, EffectType.Kill], 2),\r\n];\r\n\r\nexport let NEUTRAL_EVENTS: EventTemplate[] = [\r\n    new EventTemplate(\"&#127925 ...mining away... &#127925\", [], 1),\r\n    new EventTemplate(\"{p0} fell into a random hole in the ground\", [EffectType.Kill], 1),\r\n    new EventTemplate(\"{p0} practiced their jumping jacks\", [], 1),\r\n    new EventTemplate(\"{p0} finds a snake which they befriend\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} finds a hedgehog which they befriend\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} finds a platypus which they befriend\", [EffectType.GainWeapon], 1),\r\n    new EventTemplate(\"{p0} and {p1} had an aggresive staring contest. {p1} lost.\", [EffectType.None, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} had an aggresive staring contest. {p0} lost.\", [EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} tackled {p1} to the ground, but spared their life\", [EffectType.None, EffectType.Injure], 2),\r\n    new EventTemplate(\"{p0} tackled {p1} to the ground and killed them\", [EffectType.None, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} had a staring contest. After several hours of intense staring, they agreed to join forces\", [EffectType.JoinTeam, EffectType.JoinTeam], 2),\r\n    new EventTemplate(\"{p0} answered to {p1}'s repeated bird calls. They both forced a team\", [EffectType.JoinTeam, EffectType.JoinTeam], 2),\r\n    new EventTemplate(\"{p0} and {p1} formed an AP-Lit study group\", [EffectType.JoinTeam, EffectType.JoinTeam], 2),\r\n    new EventTemplate(\"{p0} and {p1} formed an AP-Lang study group\", [EffectType.JoinTeam, EffectType.JoinTeam], 2),\r\n    new EventTemplate(\"{p0} and {p1} formed an AP-Physics study group\", [EffectType.JoinTeam, EffectType.JoinTeam], 2),\r\n    new EventTemplate(\"{p0} and {p1} formed an AP-Calc study group\", [EffectType.JoinTeam, EffectType.JoinTeam], 2),\r\n    new EventTemplate(\"{p0} and {p1} formed an AP-Chem study group\", [EffectType.JoinTeam, EffectType.JoinTeam], 2)\r\n];\r\n\r\nexport let TEAM_EVENTS2: EventTemplate[] = [\r\n    new EventTemplate(\"{p0} and {p1} held hands for several hours\", [], 2),\r\n    new EventTemplate(\"{p0} and {p1} hunted the other players, but didn't find anyone\", [], 2),\r\n    new EventTemplate(\"No matter how hard {p0} and {p1} studied, they both failed their exam\", [EffectType.Kill, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} backstabbed {p1} both physically and metaphorically\", [EffectType.None, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} betrayed {p1}'s trust by stabbing them\", [EffectType.None, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} hunted and killed {p2}\", [EffectType.None, EffectType.None, EffectType.Kill], 3),\r\n    new EventTemplate(\"{p0} and {p1} played some tic-tac-toe. {p1} lost.\", [EffectType.None, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} played some tic-tac-toe. {p0} lost.\", [EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} played some chess. {p1} lost.\", [EffectType.None, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} played some chess. {p0} lost.\", [EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} played some checkers. {p1} lost.\", [EffectType.None, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} played some checkers. {p0} lost.\", [EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} and {p1} played some parcheesi. Neither of them knew how to play...\", [], 2),\r\n    new EventTemplate(\"{p0} insulted {p1}'s shoes. The insult was so bad it injured them both\", [EffectType.Injure, EffectType.Injure], 2),\r\n    new EventTemplate(\"{p0} insulted {p1}'s shoes. This physically hurt {p1}\", [EffectType.None, EffectType.Injure], 2),\r\n    new EventTemplate(\"{p0} insulted {p1}'s shoes. After some intense arguments, they decided to disband their team\", [EffectType.DisbandTeam, EffectType.DisbandTeam], 2),\r\n    new EventTemplate(\"{p0} and {p1} found some abandoned AR-15s on the ground\", [EffectType.GainWeapon, EffectType.GainWeapon], 2),\r\n    new EventTemplate(\"{p0} and {p1} found an abandoned first-aid kit on the ground\", [EffectType.GainMedicine, EffectType.GainMedicine], 2),\r\n    new EventTemplate(\"{p0} and {p1} found an abandoned McDonalds happy meal on the ground\", [EffectType.GainMedicine, EffectType.GainMedicine], 2),\r\n    new EventTemplate(\"{p0} and {p1} found an abandoned McDonalds happy meal on the ground...with the toys!\", [EffectType.GainMedicine, EffectType.GainMedicine], 2),\r\n];\r\n\r\nexport let HOSTILE_EVENTS: EventTemplate[] = [\r\n    new EventTemplate(\"{p0} hunted the other players, but didn't find anyone\", [], 1),\r\n    new EventTemplate(\"{p0} hunted and killed {p1}\", [EffectType.None, EffectType.Kill], 2),\r\n    new EventTemplate(\"{p0} hunted and killed both {p1} and {p2}\", [EffectType.None, EffectType.Kill, EffectType.Kill], 3),\r\n    new EventTemplate(\"{p0} hunted and killed {p1}, {p2}, and {p3}. The monster!\", [EffectType.None, EffectType.Kill, EffectType.Kill, EffectType.Kill], 4)\r\n];","import React from 'react';\r\nimport GameState from '../GameState';\r\nimport Event from '../Event/Event';\r\nimport EventTemplate from '../Event/EventTemplate/EventTemplate';\r\nimport { chooseRandomTemplate, HOSTILE_EVENTS, NEUTRAL_EVENTS, START_EVENTS, TEAM_EVENTS2 } from '../Event/EventTemplate/EventTemplateDB';\r\nimport Game from '../Game';\r\nimport './Player.css';\r\n\r\ninterface PlayerProps\r\n{\r\n    name: string;\r\n    image: string;\r\n}\r\n\r\nclass Player extends React.Component<PlayerProps>\r\n{\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n\r\n    isAlive: boolean;\r\n    isInjured: boolean;\r\n    hasWeapon: boolean;\r\n    hasMedicine: boolean;\r\n\r\n    teammates: Player[];\r\n\r\n    constructor(props: PlayerProps)\r\n    {\r\n        super(props);\r\n        this.name = props.name;\r\n        this.image = props.image;\r\n\r\n        this.id = this.name + this._randomId() + this._randomId();\r\n\r\n        this.isAlive = true;\r\n        this.isInjured = false;\r\n        this.hasWeapon = false;\r\n        this.hasMedicine = false;\r\n        this.teammates = [];\r\n    }\r\n\r\n    generateEvent(): Event | void\r\n    {\r\n        if (Game.aliveCount <= 1)\r\n            return;\r\n        \r\n        let template: EventTemplate;\r\n        if (Game.state === GameState.Start)\r\n            template = chooseRandomTemplate(START_EVENTS);\r\n        else if (Game.state === GameState.Day || Game.state === GameState.Night)\r\n        {\r\n            if (this.teammates.length === 1)\r\n                template = chooseRandomTemplate(TEAM_EVENTS2);\r\n            else if (this.hasWeapon)\r\n                template = chooseRandomTemplate(HOSTILE_EVENTS);\r\n            else\r\n                template = chooseRandomTemplate(NEUTRAL_EVENTS);\r\n        }\r\n        else\r\n            return;\r\n        \r\n        if (template.playerCount > Game.aliveCount)\r\n            return this.generateEvent();\r\n\r\n        let event = template.generateEvent(this, ...this.teammates);\r\n        event.applyEffects();\r\n        return event;\r\n    }\r\n\r\n    reset(): void\r\n    {\r\n        this.isAlive = true;\r\n        this.isInjured = false;\r\n        this.hasWeapon = false;\r\n        this.hasMedicine = false;\r\n        this.teammates = [];\r\n    }\r\n\r\n    render(): JSX.Element\r\n    {\r\n        return (\r\n            <div className={\"player\" + (this.isAlive ? \"\" : \" player-dead\")}>\r\n                {Game.state === GameState.MainMenu && <img className=\"player-trash\" src=\"/APHG/trash.jpg\" onClick={() => Game.deletePlayer(this)} alt=\"trash\" />}\r\n                <img src={this.image} width=\"130\" height=\"130\" alt=\"player\" />\r\n                <h5>{this.name}</h5>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    _randomId(): string\r\n    {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n}\r\nexport default Player;\r\n","import React from 'react';\nimport './TitleBar.css';\n\ninterface TitleBarProps\n{\n    title: string;\n}\n\nclass TitleBar extends React.Component<TitleBarProps>\n{\n    title: string;\n\n    constructor(props: TitleBarProps)\n    {\n        super(props);\n        this.title = props.title;\n    }\n\n    setTitle(title: string)\n    {\n        this.title = title;\n    }\n\n    render()\n    {\n        return (\n            <div className=\"row bg-blue text-white p-4 titlebar\">\n                <div className=\"col-sm-10 offset-sm-1 text-center\">\n                    <h2>{this.title}</h2>\n                </div>\n            </div>\n        );\n    }\n}\nexport default TitleBar;\n","import React from 'react';\r\nimport TitleBar from '../../Layout/TitleBar/TitleBar';\r\nimport Game from '../Game';\r\nimport './AddPlayerPopup.css';\r\n\r\nclass AddPlayerPopup extends React.Component\r\n{\r\n    lastImageUpload: string;\r\n\r\n    constructor(props: any)\r\n    {\r\n        super(props);\r\n        this.lastImageUpload = \"/APHG/placeholder.jpg\";\r\n    }\r\n\r\n    static open()\r\n    {\r\n        let popup = document.getElementById(\"playerpopup\") as HTMLDivElement;\r\n        popup.style.opacity = \"1\";\r\n        popup.style.marginLeft = \"0\";\r\n    }\r\n\r\n    uploadImg()\r\n    {\r\n        let popupImg = document.getElementById(\"playerpopup-img\") as HTMLInputElement;\r\n        let imgFiles = popupImg.files as FileList;\r\n        if (imgFiles.length < 0)\r\n            return;\r\n        \r\n        let file = imgFiles[0];\r\n        let reader = new FileReader();\r\n        reader.onload = ((e) => {\r\n            this.lastImageUpload = (e.target as FileReader).result as string;\r\n\r\n            let preview = document.getElementById(\"playerpopup-preview\") as HTMLImageElement;\r\n            preview.src = this.lastImageUpload;\r\n        });\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    add()\r\n    {\r\n        let popupName = document.getElementById(\"playerpopup-name\") as HTMLInputElement;\r\n\r\n        Game.addPlayer(popupName.value, this.lastImageUpload);\r\n\r\n        this.close();\r\n    }\r\n\r\n    close()\r\n    {\r\n        let popup = document.getElementById(\"playerpopup\") as HTMLDivElement;\r\n        popup.style.opacity = \"0\";\r\n        setTimeout(() => popup.style.marginLeft = \"100vw\", 200);\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"playerpopup\" id=\"playerpopup\">\r\n                <div className=\"playerpopup-background\"></div>\r\n\r\n                <div className=\"playerpopup-window container-fluid\">\r\n                    <TitleBar title=\"Add Contestant\" />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 p-3\">\r\n                            <form action=\"#\" onSubmit={() => this.add()} >\r\n                                <label className=\"form-label fs-4\" htmlFor=\"playerpopup-name\">Name</label>\r\n                                <input className=\"form-control\" type=\"text\" id=\"playerpopup-name\" maxLength={12} />\r\n\r\n                                <label className=\"form-label fs-4 mt-3\" htmlFor=\"playerpopup-img\">Image</label>\r\n                                <input className=\"form-control\" type=\"file\" id=\"playerpopup-img\" onInput={() => this.uploadImg()} />\r\n                            </form>\r\n                            \r\n                            <button className=\"btn btn-primary m-2 mt-4\" onClick={() => this.add()}>\r\n                                + Contestant\r\n                            </button>\r\n                            <button className=\"btn btn-warning m-2 mt-4\" onClick={() => this.close()}>\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <img className=\"playerpopup-preview m-2\" id=\"playerpopup-preview\" src=\"/APHG/placeholder.jpg\"></img>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddPlayerPopup;\r\n","import React from 'react';\r\nimport TitleBar from '../../Layout/TitleBar/TitleBar';\r\nimport AddPlayerPopup from '../AddPlayerPopup/AddPlayerPopup';\r\nimport Game from '../Game';\r\nimport PlayerList from '../Player/PlayerList/PlayerList';\r\n\r\nclass MainMenu extends React.Component\r\n{\r\n    constructor(props: any)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"mainmenu\">\r\n                <TitleBar title=\"Competitors\" />\r\n\r\n                <div className=\"container-stretch\">\r\n                    <PlayerList players={Game.players} noPlayerMessage=\"There are no competitors\"/>\r\n                </div>\r\n                \r\n                <div className=\"row bg-gray text-white p-4\">\r\n                    <div className=\"col-sm-12 m-1\">\r\n                        <button className=\"btn btn-primary m-1\" onClick={() => AddPlayerPopup.open()}>\r\n                            + Contestant\r\n                        </button>\r\n                        <button className=\"btn btn-warning m-1\" onClick={() => Game.nextState()}>\r\n                            Start Game\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <AddPlayerPopup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport Event from '../Event';\r\n\r\ninterface EventListProps\r\n{\r\n    events: Event[];\r\n}\r\n\r\nclass EventList extends React.Component<EventListProps>\r\n{\r\n    render(): JSX.Element[]\r\n    {\r\n        return (\r\n            this.props.events.map(event => {\r\n                return event.render();\r\n            }));\r\n    }\r\n}\r\n\r\nexport default EventList;\r\n","import React from 'react';\r\nimport TitleBar from '../../Layout/TitleBar/TitleBar';\r\nimport EventList from '../Event/EventList/EventList';\r\nimport Game from '../Game';\r\n\r\ninterface EventViewProps\r\n{\r\n    title: string;\r\n    desc: string;\r\n}\r\n\r\nclass EventView extends React.Component<EventViewProps>\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"eventview\">\r\n                <TitleBar title={this.props.title} />\r\n\r\n                <div className=\"container-stretch\">\r\n                    <p className=\"m-3\">{this.props.desc}</p>\r\n                    <EventList events={Game.currentEvents} />\r\n                </div>\r\n                \r\n                <div className=\"row bg-gray text-white p-4\">\r\n                    <div className=\"col-sm-12 m-1\">\r\n                        <button className=\"btn btn-warning m-1\" onClick={() => Game.nextState()}>\r\n                            Proceed\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EventView;\r\n","import React from 'react';\r\nimport TitleBar from '../../Layout/TitleBar/TitleBar';\r\nimport Game from '../Game';\r\nimport PlayerList from '../Player/PlayerList/PlayerList';\r\n\r\n\r\nclass DeathView extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"deathview\">\r\n                <TitleBar title=\"Deaths\" />\r\n\r\n                <div className=\"container-stretch\">\r\n                    <p className=\"m-3\">{Game.deathList.length} cannon shots can be heard in the distance</p>\r\n                    <PlayerList players={Game.deathList} noPlayerMessage=\"\" />\r\n                </div>\r\n                \r\n                <div className=\"row bg-gray text-white p-4\">\r\n                    <div className=\"col-sm-12 m-1\">\r\n                        <button className=\"btn btn-warning m-1\" onClick={() => Game.nextState()}>\r\n                            Proceed\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default DeathView;\r\n","import React from 'react';\r\nimport TitleBar from '../../Layout/TitleBar/TitleBar';\r\nimport Game from '../Game';\r\nimport PlayerList from '../Player/PlayerList/PlayerList';\r\n\r\n\r\nclass WinnerView extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"winnerview\">\r\n                <TitleBar title=\"Winner\" />\r\n\r\n                <div className=\"container-stretch\">\r\n                    <p className=\"m-3\">Congratulations</p>\r\n                    <PlayerList players={Game.getAliveList()} noPlayerMessage=\"...nobody won...\" />\r\n                </div>\r\n                \r\n                <div className=\"row bg-gray text-white p-4\">\r\n                    <div className=\"col-sm-12 m-1\">\r\n                        <button className=\"btn btn-warning m-1\" onClick={() => Game.nextState()}>\r\n                            Proceed\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default WinnerView;\r\n","import React from 'react';\r\nimport GameState from './GameState';\r\nimport Event from './Event/Event';\r\nimport Player from './Player/Player';\r\nimport MainMenu from './States/MainMenu';\r\nimport EventView from './States/EventView';\r\nimport DeathView from './States/DeathView';\r\nimport WinnerView from './States/WinnerView';\r\nimport PlayerData from './Player/PlayerData';\r\n\r\nclass Game extends React.Component\r\n{\r\n    static state: GameState;\r\n    static players: Player[];\r\n    static deathList: Player[];\r\n    static currentEvents: Event[];\r\n    static aliveCount: number;\r\n    static forceUpdate: Function;\r\n\r\n    constructor(props: any)\r\n    {\r\n        super(props);\r\n        Game.state = GameState.MainMenu;\r\n        Game.players = [];\r\n        Game.deathList = [];\r\n        Game.aliveCount = 0;\r\n        Game.currentEvents = [];\r\n        window.onbeforeunload = Game.savePlayers;\r\n        Game.forceUpdate = (() => {\r\n            this.setState({});\r\n        }).bind(this);\r\n\r\n        Game.loadPlayers();\r\n    }\r\n\r\n    static savePlayers(): void\r\n    {\r\n        console.log(\"Saving player data...\");\r\n\r\n        let data: PlayerData[] = [];\r\n        Game.players.forEach((player) => {\r\n            data.push({\r\n                n: player.name,\r\n                i: player.image\r\n            });\r\n        });\r\n\r\n        let stringData = JSON.stringify(data);\r\n        localStorage.setItem(\"playerdata\", stringData);\r\n    }\r\n\r\n    static loadPlayers(): void\r\n    {\r\n        let stringData = localStorage.getItem(\"playerdata\");\r\n        if (!(stringData))\r\n            return;\r\n\r\n        let data = JSON.parse(stringData) as PlayerData[];\r\n        data.forEach((player) => {\r\n            Game.players.push(new Player({\r\n                name: player.n,\r\n                image: player.i\r\n            }));\r\n        });\r\n    }\r\n\r\n    static getAliveList(): Player[]\r\n    {\r\n        return Game.players.filter(player => player.isAlive);\r\n    }\r\n\r\n    static getRandomPlayer(): Player\r\n    {\r\n        let player = Game.players[Math.floor(Math.random() * Game.players.length)];\r\n        if (player.isAlive)\r\n            return player;\r\n        else\r\n            return this.getRandomPlayer();\r\n    }\r\n\r\n    static generateEvents(): void\r\n    {\r\n        let events: Event[] = [];\r\n        Game.players.forEach(player => {\r\n            let event = player.generateEvent();\r\n            if (event)\r\n                events.push(event);\r\n        });\r\n        Game.currentEvents = events;\r\n    }\r\n\r\n    static addPlayer(name: string, image: string)\r\n    {\r\n        Game.players.push(new Player({ name, image }));\r\n        Game.forceUpdate();\r\n    }\r\n\r\n    static deletePlayer(player: Player)\r\n    {\r\n        let index = Game.players.indexOf(player);\r\n        Game.players.splice(index, 1);\r\n        Game.forceUpdate();\r\n    }\r\n\r\n    static resetPlayers()\r\n    {\r\n        Game.aliveCount = this.players.length;\r\n        Game.players.forEach(player => {\r\n            player.reset();\r\n        });\r\n    }\r\n\r\n    static nextState()\r\n    {\r\n        console.log(Game.state);\r\n        if (Game.state === GameState.MainMenu)\r\n        {\r\n            Game.resetPlayers();\r\n            Game.state = GameState.Start;\r\n            Game.generateEvents();\r\n        }\r\n        else if (Game.aliveCount <= 1 && Game.state != GameState.Winner)\r\n        {\r\n            Game.state = GameState.Winner;\r\n        }\r\n        else if (Game.state === GameState.Deaths)\r\n        {\r\n            Game.deathList = [];\r\n            Game.state = GameState.Day;\r\n            Game.generateEvents();\r\n        }\r\n        else if (Game.state === GameState.Start)\r\n        {\r\n            Game.state = GameState.Day;\r\n            Game.generateEvents();\r\n        }\r\n        else if (Game.state === GameState.Day)\r\n        {\r\n            Game.state = GameState.Night;\r\n            Game.generateEvents();\r\n        }\r\n        else if (Game.state === GameState.Night)\r\n        {\r\n            Game.state = GameState.Deaths;\r\n        }\r\n        else if (Game.state === GameState.Winner)\r\n        {\r\n            Game.state = GameState.MainMenu;\r\n            Game.resetPlayers();\r\n        }\r\n\r\n        console.log(Game.state);\r\n        Game.forceUpdate();\r\n    }\r\n\r\n    render()\r\n    {\r\n        if (Game.state === GameState.MainMenu)\r\n        {\r\n            return ( <MainMenu /> );\r\n        }\r\n        else if (Game.state === GameState.Start)\r\n        {\r\n            return ( <EventView title=\"The Bloodbath\" desc=\"As the tributes stand on their podiums, the horn sounds.\" /> );\r\n        }\r\n        else if (Game.state === GameState.Day)\r\n        {\r\n            return ( <EventView title=\"Day\" desc=\" \" /> );\r\n        }\r\n        else if (Game.state === GameState.Night)\r\n        {\r\n            return ( <EventView title=\"Night\" desc=\" \" /> );\r\n        }\r\n        else if (Game.state === GameState.Deaths)\r\n        {\r\n            return ( <DeathView /> );\r\n        }\r\n        else if (Game.state === GameState.Winner)\r\n        {\r\n            return ( <WinnerView /> );\r\n        }\r\n        else\r\n        {\r\n            return ( <p>Error: Invalid Game State</p> );\r\n        }\r\n    }\r\n}\r\nexport default Game;\r\n","import React, { ReactNode } from 'react';\nimport './Header.css';\n\nclass Header extends React.Component\n{\n    render(): ReactNode\n    {\n        return (\n            <nav className=\"navbar navbar-light bg-gray p-0\">\n                <div className=\"container\">\n                    <a className=\"navbar-brand p-0\" href=\"/\">\n                        <img src=\"/APHG/banner.png\" height=\"48\" alt=\"CollegeBoard AP Hunger Games\" />\n                    </a>\n                </div>\n            </nav>\n        );\n    }\n}\nexport default Header;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Footer from './Layout/Footer/Footer';\nimport Game from './Game/Game';\nimport Header from './Layout/Header/Header';\n\nReactDOM.render(\n    <React.StrictMode>\n    <Header />\n        <div className=\"container-fluid text-center\">\n            <Game />\n        </div>\n    <Footer />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}